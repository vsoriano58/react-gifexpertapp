{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,YAwBhCZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,Y,2BChCpBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEHC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVrB,kBAedM,GAfc,4CAAH,sDCDRO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIhC,OAFAc,QAAQC,IAAIL,EAAOV,GAGf,yBAAKgB,UAAU,0CACX,yBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,+BAAMA,EAAN,OCJG,SAASS,EAAT,GAAgC,IAAbrB,EAAY,EAAZA,SAAY,ECDlB,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IAGGuB,EDnB2BK,CAAc5B,GAAlCa,EAF4B,EAElCN,KAAce,EAFoB,EAEpBA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAsClB,GAElDsB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAGPL,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACQmB,IAAKnB,EAAIC,IACLD,SEjBzB,IAAMoB,EAAe,WAAM,MAKMhD,mBAAS,CAAC,cALhB,mBAKvBiD,EALuB,KAKXlD,EALW,KAQ9B,OAEI,6BACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAGSkD,EAAWtB,KAAK,SAAAT,GAAQ,OAEpB,kBAACqB,EAAD,CACIQ,IAAM7B,EACNA,SAAUA,U,MCtBtCgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.72537173.chunk.js","sourcesContent":["\n// rafc [tab]\nimport React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats, ] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"rext\"\n                value={inputValue}\n                onChange={handleInputChange}\n             />\n        </form>\n    )\n}\n\nAddCategory.prototype = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\n export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=rRAFmkKlCqp1mzTpEX1znDMe9OEn3OXs`\n    const resp = await fetch(url)\n    const { data } = await resp.json()\n\n   const gifs = data.map( img => {\n       return {\n           id: img.id,\n           title: img.title,\n           url: img.images?.downsized_medium.url\n       }\n   })\n\n   \n   return(gifs)\n\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    console.log(title, url)\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nimport { GifGridItem } from './GifGridItem';\n\nexport default function GifGrid({ category }) {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                    <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n                \n            </div>\n        </>\n    )  \n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n               \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n\n            })\n\n    }, [category])\n\n\n    return state; // { data:[], loading: true };\n\n}\n\n\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n    // No utilizaremos esta l√≠nea por los problemas ampliar los elementos y que React reacione\n    //const categories = ['one Punch', 'Sanurai X', 'Dragon Ball']\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n\n    return (\n\n        <div>\n           <h2>GifExpertApp</h2> \n           <AddCategory setCategories={setCategories}/>  \n           <hr />\n\n\n\n           <ol>\n\n                {\n                    categories.map( category => (\n                           \n                        <GifGrid\n                            key={ category }\n                            category={category}\n                        />\n\n                    ))\n                }       \n\n           </ol> \n           \n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}